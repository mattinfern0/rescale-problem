services:
  postgres:
    image: postgres:16-bullseye
    environment:
      # These should only be used local development. In production, use an env file or secrets manager.
      - POSTGRES_DB=job_dashboard_dev
      - POSTGRES_USER=local_dev
      - POSTGRES_PASSWORD=Test12345
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U local_dev -d job_dashboard_dev" ]
        interval: 10s
        timeout: 5s
        retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    image: job_dashboard_backend:dev
    build:
      context: ./backend
      target: development
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    environment:
      # These should only be used local development. In production, use an env file or secrets manager.
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE_NAME=job_dashboard_dev
      - DB_USER=local_dev
      - DB_PASSWORD=Test12345
      - DJANGO_DEBUG=True
      - DJANGO_SECRET_KEY=devSecret
      - DJANGO_ALLOWED_HOSTS=localhost,backend
      - DJANGO_CORS_ALLOWED_ORIGINS=http://localhost:3000,http://test-frontend:3000

  frontend:
    image: job_dashboard_frontend:dev
    build:
      context: ./frontend
      target: development
    ports:
      - "3000:3000"
    depends_on:
      - backend

  # Configure frontend for e2e testing
  # The React app needs to have the correct backendUrl set for e2e tests to work.
  test-frontend:
    image: job_dashboard_frontend:dev
    build:
      context: ./frontend
      target: development
    ports:
      - "3001:3000"
    expose:
      - 3000
    depends_on:
      - backend
    command: ["npm", "run", "e2e-host"]

  playwright:
    build:
      context: ./e2e
    ipc: host
    environment:
      - FRONTEND_BASE_URL=http://test-frontend:3000
    ports:
      - "9323:9323"

volumes:
  postgres-data:
